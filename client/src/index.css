:root {
  /* Base variables use generally */
  --background-color: #ffe6ef;
  --primary-color: #f06292;
  --card-color: #ffffff;
  --dark-color: #032232;
  --border-radius: 2px;

  /* Harmonic scales based on: https://every-layout.dev/ */
  --ratio: 1.5;
  --s-5: calc(var(--s-4) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s0: 1rem;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));

  --large-padding: var(--s2);
  --medium-padding: var(--s1);
  --small-padding: var(--s-1);

  /* Some defaults that are inherited from the rest of the app */
  outline-color: var(--primary-color);
  font-family: monospace;

  /* use vw unit to make text responsive(ish)*/
  font-size: calc(16px + 0.5vw);
}

/* Apply fonts and box-sizing rules to all elements */
* {
  font-size: inherit;
  font-family: inherit;
  box-sizing: border-box;
  outline-color: inherit;
}

body {
  hyphens: auto;
  margin: 0;

  background-color: var(--background-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Most reliable way i know to get 100% height in mobile that supports
  urlbar folding.
*/
html,
body,
#root {
  height: 100%;
}

/* Element styles, using the html tags instead of adding custom classes */
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

h1 {
  font-size: var(--s2);
}
h2 {
  font-size: var(--s1);
}
h3 {
  font-size: var(--s0);
  font-weight: bold;
}
h4 {
  text-decoration: underline;
  font-size: var(--s0);
}
h5 {
  font-style: italic;
  font-size: var(--s0);
}

button {
  cursor: pointer;
  display: inline-block;
  padding: 0.35rem 1.2rem;
  border: 0.1rem solid var(--primary-color);
  border-radius: var(--border-radius);
  white-space: nowrap;
  height: 2rem;
  flex: 0 1 7rem;
  background-color: var(--primary-color);
  color: #fff;
  text-decoration: none;
  line-height: 1;
  text-align: center;
  transition: all 0.2s;
}

input[type="text"][disabled],
button[disabled] {
  opacity: 0.5;
  cursor: not-allowed;
}
button:not([disabled]):hover {
  transform: scale(1.025, 1.025);
}
button:active {
  position: relative;
  transition: none;
  transform: scale(1, 1);
  top: 1px;
}

input[type="text"] {
  transition: all 0.2s;
  line-height: 1;
  padding: 0.35rem 0.35rem;
  height: 2rem;
  width: 100%;
  border: 0.1rem solid var(--primary-color);
  border-radius: var(--border-radius);
}
label {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

hr {
  border-style: dashed;
  border-color: var(--primary-color);
  border-width: 1px;
  display: block;
  margin: var(--s-2) 0 var(--s-1);
}
label {
  white-space: nowrap;
}

pre {
  padding: var(--small-padding);
  color: var(--card-color);
  background: var(--dark-color);
}

/* Look and feel + utility classes */
.card {
  /* .card simple element to encapsulate information */
  padding: var(--medium-padding);

  background-color: var(--card-color);
  border-radius: 6px;
  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.02),
    0 6.7px 5.3px rgba(0, 0, 0, 0.028), 0 12.5px 10px rgba(0, 0, 0, 0.035),
    0 22.3px 17.9px rgba(0, 0, 0, 0.042), 0 41.8px 33.4px rgba(0, 0, 0, 0.05),
    0 100px 80px rgba(0, 0, 0, 0.07);
}

.stack-v > * + * {
  margin-top: var(--s-2);
}

.stack-h > * + * {
  margin-left: var(--s-2);
}
.distribute-h {
  display: flex;
  justify-content: space-between;
}

.inline > * {
  display: inline-block;
}

.fieldset {
  display: flex;
  align-items: center;
}
.fieldset button {
  align-self: flex-end;
}

.led {
  width: 1em;
  height: 1em;
  border-radius: 50%;
  transition: all 0.5s ease-in-out;
}
.led.red {
  background-color: #f00;
  box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px,
    rgba(255, 0, 0, 0.5) 0 2px 12px;
  animation: blinkRed 0.5s infinite;
}
.led.green {
  background-color: #abff00;
  box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px,
    #89ff00 0 2px 12px;
}

.led.blue {
  background-color: #3355ab;
}

.led.yellow {
  background-color: #ff0;
  box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px,
    #ff0 0 2px 12px;

  animation: blinkYellow 1s infinite;
}
@keyframes blinkRed {
  from {
    background-color: #f00;
  }
  50% {
    background-color: #a00;
    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px,
      rgba(255, 0, 0, 0.5) 0 2px 0;
  }
  to {
    background-color: #f00;
  }
}
@keyframes blinkYellow {
  from {
    background-color: #ff0;
  }
  50% {
    background-color: #aa0;
    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px,
      #ff0 0 2px 0;
  }
  to {
    background-color: #ff0;
  }
}

/* Specific styles, these are styles that is tied to the this specific applications ui */
main > * {
  flex: 1;
}
main {
  padding: var(--small-padding);
  width: 100%;
  display: flex;
  flex-direction: column;
}

.connection-info {
  padding: var(--s-2);
  display: flex;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  font-size: 0.75rem;
}

.debug-info > pre {
  z-index: 2;
  border-radius: var(--border-radius);
  position: absolute;
  top: 50px;
  overflow: auto;
  min-width: 30vw;
  max-width: 50vw;
  max-height: 50vh;
  right: var(--small-padding);
}
